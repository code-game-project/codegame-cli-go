package main

import (
	"encoding/json"
	"log"
	"os"
	"strconv"
	"time"

	"{{.LibraryURL}}"

	"{{.ModulePath}}/{{.PackageName}}"
)

func main() {
	port := 8080
	if portEnv := os.Getenv("CG_PORT"); portEnv != "" {
		var err error
		port, err = strconv.Atoi(portEnv)
		if err != nil {
			log.Fatal("invalid port")
		}
	}

	server := cg.NewServer("{{.Name}}", cg.ServerConfig{
	DisplayName:                 "{{.Name}}",
		Version:                 "0.1",
		Description:             "",
		RepositoryURL:           "",
		Port:                    port,
		CGEFilepath:             "events.cge",
		DeleteInactiveGameDelay: 24 * time.Hour,
		KickInactivePlayerDelay: 24 * time.Hour,
	})

	server.Run(func(cgGame *cg.Game, config json.RawMessage) {
		var gameConfig {{.PackageName}}.GameConfig
		err := json.Unmarshal(config, &gameConfig)
		if err == nil {
			cgGame.SetConfig(gameConfig)
		} else {
			cgGame.Log.Error("Failed to unmarshal game config: %s", err)
		}

	    {{.PackageName}}.NewGame(cgGame, gameConfig).Run()
	})
}
