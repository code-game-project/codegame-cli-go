package {{.PackageName}}

import (
	"fmt"

	"{{.LibraryURL}}"
)

type Game struct {
	cg     *cg.Game
	config GameConfig
}

func NewGame(cgGame *cg.Game, config GameConfig) *Game {
	game := &Game{
		cg:     cgGame,
		config: config,
	}
	return game
}

func (g *Game) Run() {
	for g.cg.Running() {
		cmd, ok := g.cg.WaitForNextCommand()
		if !ok {
			break
		}
		g.handleEvent(cmd.Origin, cmd.Cmd)
	}
}

func (g *Game) handleCommand(origin *cg.Player, cmd cg.Command) {
	switch cmd.Name {
	default:
		player.Send(cg.ErrorEvent, cg.ErrorEventData{
			Message: fmt.Sprintf("unexpected command: %s", cmd.Name),
		})
	}
}
